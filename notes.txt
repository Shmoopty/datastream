datapipe schema_file element_file [-x format xml]|[-j format json] [-p style pretty]|[-c style compact]
usage:
datapipe schema_file element_file
[-x] format xml (default is json)
[-p] pretty print (default is compact)




[-c style compact]

parameters

action
output format

request parameters
parameters



// the schema tells us which sets nest within the current set

// we use the integer id from the child set to retrieve rows
// from a map which is a member of this object

// why such a convoluted path to the data we alreay have in this object?

// 1.
// because there may not be any child rows in the data for this row,
// but we still may want to add an empty label

// 2.
// because this ensures that the sets are presented in the correct order
// not the order which the map is sorted


// map
// schema sets are stored in list container
// this guarantees items will not be moved
// and pointers to these objects will reliable
// but it does not permit us fast random access
// for this purpose a map of pointers is created
//
// this should always we quick, not enough rows to be focus of optimisation
// but could try re factoring so it can occur after loadElementSchema
// to end database connection sooner
//
// cyclic references are prevented because tree mapped from child to parent
// but read parent to child.
// as root will not be connected to a parent, any cyclic references are not traversed
